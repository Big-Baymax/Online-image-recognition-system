<?php/** * Created by PhpStorm. * User: Baymax * Date: 2018/1/5 * Time: 19:01 */namespace app\user\controller;use think\Controller;use think\Session;use think\Request;class UserManage extends Controller{    /**     * @param avatar base64     * 用户头像接口     */    public function avatar()    {        $uid = Session::get('user_id');        $result   = array('status' => false, 'msg' => "");        $all = Request::instance()->post();        $user = model('User');        //保存base64字符串为图片        //匹配出图片的格式        if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $all['avatar'], $avatar)){            $type = $avatar[2];            $name = $uid.'_'.intval(time());            $new_file = "./static/img/avatar/{$name}.{$type}";            $avatarname = $name.'.'.$type;            if (file_put_contents($new_file, base64_decode(str_replace($avatar[1], '', $all['avatar'])))){                $avatarurl = $user -> where('uid',$uid) -> column('avatar');                if(!empty($avatarurl[0])){                    if(file_exists("./static/img/avatar/{$avatarurl[0]}")){                        if(!unlink("./static/img/avatar/{$avatarurl[0]}")){                            $result['status'] = 0;                            $result['msg'] = '旧头像删除失败！';                            return json($result);                        }                    }                }                $reset_result = $user -> where('uid='.$uid) -> setField('avatar',$avatarname);                if($reset_result ){                    Session::set('avatar_user' , $avatarname);                    $result['status'] = 1;                    $result['msg'] = '头像修改成功！';                    return json($result);                }else{                    $result['status'] = 0;                    $result['msg'] = '头像修改失败！';                    return json($result);                }            }else{                $result['status'] = 0;                $result['msg'] = '头像写入失败！';                return json($result);            }        }    }    /**     * @param name     * 用户信息修改接口     */    public function user_info(){        $all = Request::instance()->post();        $user = model('User');        $result = array('status' => false, 'msg' => "");        $uid = Session::get('user_id');        if(empty($all['name'])){            $result['status'] = 0;            $result['msg'] = '昵称不得为空！';            return json($result);        }        $edit_result = $user -> where('uid='.$uid) ->update([            'name' => $all['name'],            'place' => $all['place'],            'phone' => $all['phone'],            'application' => $all['application'],            'business' => $all['business'],            'update_time' => date('Y-m-d H:i:s'),        ]);        if($edit_result){            $result['status'] = 1;            $result['msg'] = '更新成功！';            return json($result);        }else{            $result['status'] = 0;            $result['msg'] = '更新失败！';            return json($result);        }    }    /**     * @param name     * 用户修改密码接口     */    public function user_password(){        $all = Request::instance()->post();        $user = model('User');        $result = array('status' => false, 'msg' => "");        $uid = Session::get('user_id');        if($all['new_pwd'] != $all['confirm_pwd']){            $result['status'] = 0;            $result['msg'] = '两次输入密码不一样！';            return json($result);        }        $userinfo = $user -> where('uid',$uid) -> select();        if(authcode($all['old_pwd'],'mysys') != $userinfo[0]['pwd']){            $result['status'] = 0;            $result['msg'] = '原密码错误！';            return json($result);        }        $edit_result = $user ->where('uid='.$uid) -> update([            'pwd' => authcode($all['new_pwd'],'mysys'),            'update_time' => date('Y-m-d H:i:s'),        ]);        if($edit_result){            $result['status'] = 1;            $result['msg'] = '修改成功！';            return json($result);        }else{            $result['status'] = 0;            $result['msg'] = '修改失败！';            return json($result);        }    }    /**     * @param name     * 用户消息标记为已读     */    public function view_news(){        $all = Request::instance()->post();        $result = array('status' => false, 'msg' => "");        $uid = Session::get('user_id');        $user_news = model('UserNews');        $news = model('News');        $edit_result = $user_news->where(['user_id'=>$uid,'news_id'=>$all['uid']])->update([            'status' => 1,        ]);        $news->where("uid=".$all['uid'])->setInc('view_count', 1);        if($edit_result){            $result['status'] = 1;            $result['msg'] = '标记成功！';            return json($result);        }else{            $result['status'] = 0;            $result['msg'] = '标记失败！';            return json($result);        }    }    /**     * @param name     * 用户签到     */    public function sign(){        $uid = Session::get('user_id');        $user = model('User');        $result = array('status' => false, 'msg' => "");        $sign = $user -> where('uid='.$uid) ->select();        if(!empty($sign[0]['integral_time'])){            $b = substr($sign[0]['integral_time'],0,10);            $c = date('Y-m-d');            if($b!=$c){                $user -> where('uid='.$uid) -> setField('integral_time',date('Y-m-d H:i:s'));                $sql = $user->where("uid=".$uid)->setInc('integral', 5);                if($sql){                    $result['status'] = 1;                    $result['integral'] = 5;                    $result['msg'] = '签到成功！';                    return json($result);                }else{                    $result['status'] = 0;                    $result['msg'] = '签到失败！';                    return json($result);                }            }else{                $result['status'] = 0;                $result['msg'] = '今天已经签到了！';                return json($result);            }        }    }}