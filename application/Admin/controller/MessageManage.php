<?php/** * Created by PhpStorm. * User: Baymax * Date: 2017/12/26 * Time: 10:27 */namespace app\Admin\controller;use think\Request;use think\Session;use app\Common\Controller\AuthAdminInterManage;Class MessageManage extends AuthAdminInterManage{    //['收件箱','已发送','重要','草稿','垃圾箱']    public function extract_attrib($tag) {        //id|alt|title|src        preg_match_all('/(src)=("[^"]*")/i', $tag, $matches);        //var_dump($matches);        $ret = array();        $num = 0;        foreach($matches[1] as $i => $v) {            $ret[$num++][$v] = str_replace('"','',$matches[2][$i] );            //var_dump($ret);        }        return $ret;    }    /**     * @param     *     * uid(草稿id) int     * title string     * email string     * detail string     *     * @return result     * 发送信件     */    public function send_message(){        $all = Request::instance()->post();        $message = model('Message');        $img_name = array();        $img = array();        //$all['detail'] =htmlentities('<img src="https://gw.alicdn.com/tfscom/TB1PXPFdlbM8KJjSZFFXXaynpXa.png" width="800" style="">');        //$all['detail'] ='<img src="https://gw.alicdn.com/tfscom/TB1PXPFdlbM8KJjSZFFXXaynpXa.png" width="800" style="">';        //$all['email'] ='764929841@qq.com';        //$all['title'] ='来自图像识别系统过的回信！';        //$con = $all['detail'];        $con = $this->extract_attrib($all['detail']);        foreach($con as $val) {            //匹配出图片的格式如果不是base64不操作            if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $val["src"], $detail)){                $type = $detail[2];                $name = 'message_'.intval(time());                $new_file = "./static/img/message/$name.{$type}";                $root = strstr($_SERVER["SCRIPT_NAME"],'/index.php',true);                $path = 'http://'.$_SERVER["SERVER_NAME"].$root.'/static/img/message/';                $file_name = $name.'.'.$type;                if (file_put_contents($new_file, base64_decode(str_replace($detail[1], '', $val['src'])))){                    $all['detail'] = str_replace($val['src'],$path.$file_name,$all['detail']);                    array_push($img_name,$file_name);                    array_push($img,$path.$file_name);                }else{                    return json(array('status' => 0, 'msg' => "图片转化失败！"));                }            }        }        $status = SendMail($all['email'],"亲爱的用户",$all['title'],$all['detail'],$all['detail'],'Newing图像识别系统');        //$status = 1;        if($status){            $data = [                'user_id' => Session::get('admin_id'),                'name' => Session::get('admin_name'),                'email' => $all['email'],                'title' => $all['title'],                'content' => $all['detail'],                'time' => date('Y-m-d H:i:s'),                'img' =>implode(',',$img),                'img_name' =>implode(',',$img_name),                'view_count' =>0,                'type' => 1            ];            //判断是否是那个草稿 是(修改)否（新建）            $type = $message->where('uid',$all['uid'])->column('type');            if(!empty($type)){                if($type[0]==3){                    $message->where('uid='.$all['uid']) ->update($data);                }            }else{                $message->insert($data);            }            return json(array('status' => 1, 'msg' => "发送成功"));        }else{            $data = [                'user_id' => Session::get('admin_id'),                'name' => Session::get('admin_name'),                'email' => $all['email'],                'title' => $all['title'],                'content' => $all['detail'],                'time' => date('Y-m-d H:i:s'),                'img' =>implode(',',$img),                'img_name' =>implode(',',$img_name),                'view_count' =>0,                'type' => 3            ];            //判断是否是那个草稿 是(修改)否（新建）            $type = $message->where('uid',$all['uid'])->column('type');            if(!empty($type)){                if($type[0] == 3){                    $message->where('uid='.$all['uid']) ->update($data);                }            }else{                $message->insert($data);            }            return json(array('status' => 0, 'msg' => "发送失败，已为您存为草稿！"));        }        //var_dump();       // return json($all['detail'][0]);    }    /**     * @return result     * 信件存为草稿     */    public function draft_message(){        $all = Request::instance()->post();        $message = model('Message');        $img_name = array();        $img = array();        $con = $this->extract_attrib($all['detail']);        foreach($con as $val) {            //匹配出图片的格式如果不是base64不操作            if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $val["src"], $detail)){                $type = $detail[2];                $name = 'message_'.intval(time());                $new_file = "./static/img/message/$name.{$type}";                $root = strstr($_SERVER["SCRIPT_NAME"],'/index.php',true);                $path = 'http://'.$_SERVER["SERVER_NAME"].$root.'/static/img/message/';                $file_name = $name.'.'.$type;                if (file_put_contents($new_file, base64_decode(str_replace($detail[1], '', $val['src'])))){                    $all['detail'] = str_replace($val['src'],$path.$file_name,$all['detail']);                    array_push($img_name,$file_name);                    array_push($img,$path.$file_name);                }else{                    return json(array('status' => 0, 'msg' => "图片转化失败！"));                }            }        }            $data = [                'user_id' => Session::get('admin_id'),                'name' => Session::get('admin_name'),                'email' => $all['email'],                'title' => $all['title'],                'content' => $all['detail'],                'time' => date('Y-m-d H:i:s'),                'img' =>implode(',',$img),                'img_name' =>implode(',',$img_name),                'view_count' =>0,                'type' => 3            ];            //判断是否是那个草稿 是(修改)否（新建）            $type = $message->where('uid',$all['uid'])->column('type');            if(!empty($type)){                if($type[0] == 3){                    $message->where('uid='.$all['uid']) ->update($data);                }            }else{                $message->insert($data);            }            return json(array('status' => 1, 'msg' => "已为您存为草稿！"));    }    /**     * @return result     * 标记已读     */    public function view_message(){        $all = Request::instance()->post();        $message = model('Message');       // var_dump($all['uid']);        foreach ($all['uid'] as $val){            $message->where('uid', $val)->setInc('view_count', 1);        };        return json(array('status' => 1, 'msg' => "标为已读成功！"));    }    /**     * @return result     * 标记重要     */    public function important_message(){        $all = Request::instance()->post();        $message = model('Message');        // var_dump($all['uid']);        foreach ($all['uid'] as $val){            $message-> where('uid='.$val) -> setField('type',2);        };        return json(array('status' => 1, 'msg' => "已标为重要！"));    }    /**     * @return result     * 删除邮件     */    public function del_message(){    }    /**     * @return result     * 标记垃圾邮件     */    public function trash_message(){        $all = Request::instance()->post();        $message = model('Message');        // var_dump($all['uid']);        foreach ($all['uid'] as $val){            $message-> where('uid='.$val) -> setField('type',4);        };        return json(array('status' => 1, 'msg' => "已标为垃圾邮件！"));    }    /**     * @return result     * 恢复邮件状态     */    public function recovery_message(){    }    /**     * @return result     * 下载邮件附件     */    public function download_img_message($id){        $message = model('Message');        $list = $message->where('uid',$id)->select();        $list = explode(',',$list[0]['img_name']);        //打包        $result_zip = tozip('download_img_','./static/img/message/',$list);        $result = echo_file('./static/img/message/'.$result_zip['msg'],'消息附件');        if($result){            unlink('./static/img/message/'.$result_zip['msg']); //下载完成后要进行删除        }else{            echo "<script>alert('对不起,您要下载的文件不存在');</script>";        }    }}