<?php/** * Created by PhpStorm. * User: Baymax * Date: 2017/12/13 * Time: 15:16 */namespace app\Admin\controller;use think\Request;use app\Common\Controller\AuthAdminInterManage;class Emailcode extends AuthAdminInterManage{    public function emailcode_list()    {        $all = Request::instance()->post();        $Emailcode = model('UserEmailcode');        //如果用户没有传值就设置默认        if (isset($all['sortName'])){            $name = $all['sortName'];        }else{            $name = 'time';        }        if (isset($all['time'])){            $time = $all['time'];            switch ($all['time'])            {                case 1:                    $starttime = date("Y-m-d H:i:s",mktime(0,0,0,date('m'),date('d'),date('Y')));                    $endtime = date("Y-m-d H:i:s",mktime(0,0,0,date('m'),date('d')+1,date('Y'))-1);                    $map['time']  = array('BETWEEN',array($starttime,$endtime));                    $list = $Emailcode->where($map)->order($name, $all['sortOrder'])->paginate($all['pageSize'],false,[                        'page' => $all['pageNumber'],                    ]);                    break;                case 2:                    $starttime = date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m"),date("d")-date("w")+1,date("Y")));                    $endtime = date("Y-m-d H:i:s",mktime(23,59,59,date("m"),date("d")-date("w")+7,date("Y")));                    $map['time']  = array('BETWEEN',array($starttime,$endtime));                    $list = $Emailcode->where($map)->order($name, $all['sortOrder'])->paginate($all['pageSize'],false,[                        'page' => $all['pageNumber'],                    ]);                    break;                case 3:                    $starttime = date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m"),1,date("Y")));                    $endtime = date("Y-m-d H:i:s",mktime(23,59,59,date("m")+1 ,0,date("Y")));                    $map['time']  = array('BETWEEN',array($starttime,$endtime));                    $list = $Emailcode->where($map)->order($name, $all['sortOrder'])->paginate($all['pageSize'],false,[                        'page' => $all['pageNumber'],                    ]);                    break;                case 4:                    $list = $Emailcode->order($name, $all['sortOrder'])->paginate($all['pageSize'],false,[                        'page' => $all['pageNumber'],                    ]);                    break;                default:                    $list = $Emailcode->order($name, $all['sortOrder'])->paginate($all['pageSize'],false,[                        'page' => $all['pageNumber'],                    ]);                    break;            }        }else{            $list = $Emailcode->order($name, $all['sortOrder'])->paginate($all['pageSize'],false,[                'page' => $all['pageNumber'],            ]);        }        return json($list);    }}